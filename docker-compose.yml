#
# This docker compose will spin up all infrastructure necessary to run a simple web server
# Full docker-compose file reference: (https://docs.docker.com/compose/compose-file/)
#
# Endpoints:
#
#   - S3 (to deploy configuration into)
#       - http://localhost:4572
#
#       - find current latest configuration version
#           $ scripts/config latest
#       - download configuration version <version>
#           $ scripts/config download --version <version>
#       - upload configuration from <from> to version <version>
#           $ scripts/config upload --from <from>  --version <version>
#       - set latest configuration version to <version>
#           $ scripts/config latest --version <version>
#   - Localstack web UI
#       - http://localhost:9090
#   - Redis
#       - localhost:6379
#   - Web service endpoint: 
#       - http://<ip address>:8585
#       - available routes:
#           GET /v1/health (curl -v -X GET http://localhost:8585/v1/health) 
#
#           PUT /v1/account/<username>    (curl -X PUT http://localhost:8585/v1/account/<name>)
#           GET /v1/account/<userid>      (curl -X GET http://localhost:8585/v1/account/<userid>)
#
#           GET /v1/config/<key>          (curl -X GET http://localhost:8585/v1/config/<key>)
#
# Data storage:
#
#   - Game Configuration
#        - docker/localstack/data/configuration/<MAJOR>
#   - DynamoDB
#       - docker/localstack/data/dynamodb
# 
version: '3.0'
services:
  aws:
    image: localstack/localstack:0.11.0
    # https://docs.docker.com/compose/compose-file/#ports
    ports:
        - "4567-4568:4567-4568" # exclude dynamodb port (4569), we're using it below outside of localstack
        - "4570-4584:4570-4584"
        - "${PORT_WEB_UI-9090}:${PORT_WEB_UI-9090}"
    # https://docs.docker.com/compose/compose-file/#environment
    environment:
        - SERVICES=s3,sqs,ec2,sns
        - PORT_WEB_UI=${PORT_WEB_UI-9090}
        - DATA_DIR=/tmp/localstack/data
        - DEFAULT_REGION=us-west-2
    networks:
      backend:
        aliases:
          - sqs.us-west-2.amazonaws.com
          - ec2.us-west-2.amazonaws.com
          - sns.us-west-2.amazonaws.com
          - s3.us-west-2.amazonaws.com
    volumes:
        # /docker-entrypoint-initaws.d is a reserved folder for localstack that
        # is a sort of init.d, all scripts in it will get executed in alphabetical
        # order
        #
        # /tmp/localstack/data is DATADIR defined above mirrored locally to
        # ./docker/localstack/data
        - ./docker/localstack/init.d:/docker-entrypoint-initaws.d
        - ./docker/localstack/data:/tmp/localstack/data
    # here we're depending on dynamodb because we want to use the localstack init
    # scripts to create the dynamodb tables
    depends_on:
        - dynamodb
    expose:
        - "4572"  # localstack's S3 service port
  dynamodb:
    image: amazon/dynamodb-local:1.12.0
    environment:
        - ./Djava.library.path=./DynamoDBLocal_lib
    working_dir: /home/dynamodblocal
    volumes:
        # the dynamodb docker image working directory is /home/dynamodblocal,
        # we mirror it to the local folder ./docker/localstack/data/dynamodb
        - ./docker/localstack/data/dynamodb:/home/dynamodblocal/data
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data", "-port", "4569"]
    ports:
      - "4569:4569"
    networks:
      backend:
        aliases:
          - dynamodb.us-west-2.amazonaws.com
    expose:
      - 4569
  redis:
    image: redis:3.2.12
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
        - ./docker/redis.conf:/tmp/redis.conf
    command: [ "redis-server", "/tmp/redis.conf" ]
    expose:
      - 6379
  simple-web-service:
    # to attach to this Erlang node:
    #   docker exec --tty --interactive simple_web_server_simple-web-service_1 /srv/service/bin/simple_web_server remote_console
    image: simple_web_server:latest
    # https://docs.docker.com/compose/compose-file/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir
    # hostname: webserver.local
    # https://docs.docker.com/compose/compose-file/#ports
    ports:
      - "8585:8585/tcp"
    environment:
        - AWS_REGION=us-west-2
        - AWS_ACCOUNT_ID=000000000000
    # https://docs.docker.com/compose/compose-file/#network-configuration-reference
    networks:
      - frontend
      - backend
    depends_on:
        - aws
        - redis
    # https://docs.docker.com/compose/compose-file/#expose
    # Expose ports without publishing them to the host machine - theyâ€™ll only be accessible to linked services.
    # Only the internal port can be specified.
    expose:
        - "8585"
  shell:
    # to attach to this container:
    #   docker-compose exec shell bash
    image: bash
    entrypoint: bash
    stdin_open: true
    tty: true
    networks:
      - frontend
      - backend

networks:
  frontend:
      driver: bridge
  backend:
      driver: bridge


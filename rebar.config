%%-*- mode: erlang -*-

{erl_opts, [
    {parse_transform, lager_transform},
    %bin_opt_info
    debug_info,
    % warn_export_all,
    warn_export_vars,
    % warn_missing_spec
    warn_obsolete_guard,
    warn_shadow_vars,
    warn_unused_import,
    % warn_missing_spec,
    warnings_as_errors
]}.

% this informs rebar3 that the rebar3_scuttler plugin will takeover
% the release generation process, this is necessary so that it is able
% to inject the cuttlefish invocation to the pre-start release hook
{project_plugins, [
    {rebar3_scuttler,
        {git, "https://github.com/lrascao/rebar3_scuttler",
            {branch, "develop"}}}
]}.

% scuttler plugin opts
{scuttler, [
    % this is the human readable .conf file that the users of your application
    % will understand and edit in order to change configuration parameters,
    % it's location is relative to the root dir of the release
    % (ie. alongside bin, releases, etc)
    {conf_file, "etc/simple_web_server.conf"},
    % a list of cuttlefish schemas to find in your project and it's
    % dependencies and the corresponding output file, this is a list of tuples
    % that can the following forms:
    %
    %   `{vm_args, OutputFile}`
    %       A heavily annotated .schema file maintained by the plugin with up to date
    %       Erlang VM parameters. This vm.args schema is copied to the release directory
    %       to the `releases/{{release_version}}/erlang.vm.args.schema`
    %
    %       Generated vm.args files can be included from the main vm.args file
    %       using the `-args_file` parameter
    %       eg. vm.args
    %           -cookie somecookie
    %           -name nodename
    %           -args_file vm.generated.args
    %
    %   `{Discovery :: auto_discover | string(),
    %     ReleaseSchemaDir :: string(),
    %     OutputFile :: string()}`
    %   
    %       Schema ::
    %           auto_discover: finds *.schema files in:
    %                           priv/*.schema
    %                           priv/schema/*.schema
    %                           priv/schemas/*.schema
    %                           schema/*.schema
    %                           schemas/*.schema
    %           "<dir>": find all *.schema in dir
    %
    %       ReleaseSchemaDir::
    %           Specifies the location relative to the release dir where the referred schemas will be
    %           copied to. 
    %
    %       OutputFile:
    %           Specifies the .config or vm.args filename that cuttlefish generates
    %           out of each schema.
    %
    %           Config files are then intended to be
    %           included in your sys.config file.
    %           eg. sys.config
    %           [
    %               {myapp, [
    %                   {my_conf1, value}
    %               ]},
    %
    %               "releases/{{release_version}}/config/generated/user_defined.config"
    %           ].
    %
    {schemas, [
           {vm_args, "releases/{{release_version}}/vm.generated.args"},
           {"priv/schemas", "releases/{{release_version}}/schema",
            "releases/{{release_version}}/config/generated/user_defined.config"}
    ]},
    % Specifies where you'd like rebar3_scuttler to generate
    % the pre start hook to. This is intended to be then added
    % to the extended_start_script_hooks/pre_start relx entry list
    % for it to be invoked prior to the release start
    {pre_start_hook, "bin/hooks/pre_start_cuttlefish"}
]}.

{deps, [
    {recon, ".*", {git, "https://github.com/ferd/recon.git",
        {tag, "2.3.2"}}},
    {lager, ".*", {git, "https://github.com/basho/lager.git",
        {tag, "3.2.4"}}},
    {jsx, {git, "https://github.com/talentdeficit/jsx.git",
        {tag, "2.8.1"}}},
    {erlydtl, {git, "https://github.com/erlydtl/erlydtl.git",
        {tag, "0.12.0"}}},
    {cowboy, {git, "https://github.com/ninenines/cowboy.git",
        {tag, "2.8.0"}}},
    {erlcloud,".*", {git, "https://github.com/erlcloud/erlcloud.git",
        {tag, "3.3.1"}}},
    {uuid,".*", {git, "https://github.com/miniclip/erlang-uuid.git",
        {tag, "1.1.2"}}},
    {jsx, "2.10.0"},
    {eredis, ".*", {git, "https://github.com/MiniclipPortugal/eredis.git",
        {tag, "2.3.0"}}}
]}.

{relx, [
    {release, {'simple_web_server', git}, [
        simple_web_server,
        sasl
    ]},

    {include_erts, false},
    {extended_start_script, true},

    {overlay_vars, "config/overlays/local/vars.config"},
    {overlay, [
        {mkdir, "log/sasl"},

        {mkdir, "scripts"},

        {mkdir, "bin/hooks"},
        {copy, "scripts/hooks/pre_start", "bin/hooks/pre_start"},

        {mkdir, "etc/ssh"},
        {copy, "etc/ssh/setup", "etc/ssh/setup"},

        {mkdir, "releases/{{release_version}}/config"},
        {template, "config/app.config", "releases/{{release_version}}/sys.config"},
        {template, "config/vm.args", "releases/{{release_version}}/vm.args"},

        {template, "config/eredis.config",
            "releases/{{release_version}}/config/eredis.config"}
    ]},

    % start script hooks
    {extended_start_script_hooks, [
        {pre_start, [
          {custom, "hooks/pre_start"},
          % besides our own pre start script, we're here adding
          % the one that was generated out of rebar3_scuttler,
          % this script will pick up any .schema file in share/schema
          % and generate a same name .config file in `output_dir`
          {custom, "hooks/pre_start_cuttlefish"}
        ]}
    ]}
]}.

{profiles, [
    {local, [
        {erl_opts, [warn_export_all]},
        {relx, [
            {overlay_vars, "config/overlays/local/vars.config"}
        ]}]
    },
    {docker, [
        {relx, [
            {include_erts, true},
            {overlay_vars, "config/overlays/docker/vars.config"}
        ]}]
    }
]}.

